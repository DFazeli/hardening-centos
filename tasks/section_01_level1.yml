---
#
# Copyright 2014 Major Hayden
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

- name: 1.1.1 Create Separate Partition for /tmp (Scored)
  debug: msg="*** Manually create Separate Partition for /tmp."
  tags:
      - scored
      - section1.1
      - section1.1.1

- name: 1.1.2 - 1.1.4 Set nodev,nosuid,noexec option for /tmp Partition (Scored)
  mount: >
      name="/tmp"
      src={{ item.device }}
      state=mounted
      fstype={{ item.fstype }}
      opts="nodev,nosuid,noexec"
  when: item.mount == "/tmp"
  with_items: "{{ansible_mounts}}"
  when: partitions_tmp
  tags:
      - scored
      - section1.1
      - section1.1.2
      - section1.1.3
      - section1.1.4

- name: --- 1.1.1.1 - Ensure mounting of cramfs filesystems is disabled (Scored) ---
  copy:
    dest: "/etc/modprobe.d/cramfs.conf"
    content: |
         install cramfs /bin/true
  when: cramfs
  tags:
     - scored
     - section1.1.1.1

- name: --- 1.1.1.1 - Ensure mounting of cramfs filesystems is disabled (Scored) - Remove module ---
  shell: |
      rmmod cramfs
  ignore_errors: yes
  when: cramfs
  tags:
      - scored
      - section1.1.1.1

- name: --- 1.1.1.2 - Ensure mounting of freevxfs filesystems is disabled (Scored) ---
  copy:
    dest: "/etc/modprobe.d/freevxfs.conf"
    content: |
         install freevxfs /bin/true
  when: freevxfs
  tags:
     - scored
     - section1.1.1.2

- name: --- 1.1.1.2 - Ensure mounting of freevxfs filesystems is disabled (Scored) - Remove module ---
  shell: |
      rmmod freevxfs
  ignore_errors: true
  when: freevxfs
  tags:
      - scored
      - section1.1.1.2

- name: --- 1.1.1.3 - Ensure mounting of jffs2 filesystems is disabled (Scored) ---
  copy:
    dest: "/etc/modprobe.d/jffs2.conf"
    content: |
         install jffs2 /bin/true
  when: jffs2
  tags:
     - scored
     - section1.1.1.3

- name: --- 1.1.1.3 - Ensure mounting of jffs2 filesystems is disabled (Scored) - Remove module ---
  shell: |
    rmmod jffs2
  ignore_errors: true
  tags:
    - scored
    - section1.1.1.3
  when: jffs2

- name: --- 1.1.1.4 - Ensure mounting of hfs filesystems is disabled (Scored) ---
  copy:
    dest: "/etc/modprobe.d/hfs.conf"
    content: |
       install hfs /bin/true
  tags:
   - scored
   - section1.1.1.4
  when: hfs

- name: --- 1.1.1.4 - Ensure mounting of hfs filesystems is disabled (Scored) - Remove module ---
  shell: |
    rmmod hfs
  ignore_errors: true
  tags:
    - scored
    - section1.1.1.4
  when: hfs

- name: --- 1.1.1.5 - Ensure mounting of hfsplus filesystems is disabled (Scored) ---
  copy:
    dest: "/etc/modprobe.d/hfsplus.conf"
    content: |
       install hfsplus /bin/true
  tags:
   - scored
   - section1.1.1.5
  when: hfsplus

- name: --- 1.1.1.5 - Ensure mounting of hfsplus filesystems is disabled (Scored) - Remove module ---
  shell: |
    rmmod hfsplus
  ignore_errors: true
  tags:
    - scored
    - section1.1.1.5
  when: hfsplus


- name: --- 1.1.1.6 - Ensure mounting of squashfs filesystems is disabled (Scored) ---
  copy:
    dest: "/etc/modprobe.d/squashfs.conf"
    content: |
       install squashfs /bin/true
  tags:
   - scored
   - section1.1.1.6
  when: squashfs

- name: --- 1.1.1.6 - Ensure mounting of squashfs filesystems is disabled (Scored) - Remove module ---
  shell: |
    rmmod squashfs
  ignore_errors: true
  tags:
    - scored
    - section1.1.1.6
  when: squashfs


- name: --- 1.1.1.6 - Ensure mounting of udf filesystems is disabled (Scored) ---
  copy:
    dest: "/etc/modprobe.d/udf.conf"
    content: |
       install udf /bin/true
  tags:
   - scored
   - section1.1.1.6
  when: udf

- name: --- 1.1.1.6 - Ensure mounting of udf filesystems is disabled (Scored) - Remove module ---
  shell: |
    rmmod udf
  ignore_errors: true
  when: udf
  tags:
    - scored
    - section1.1.1.6



- name: --- 1.1.1.7 - Ensure mounting of FAT filesystems is disabled (Scored) ---
  copy:
    dest: "/etc/modprobe.d/vfat.conf"
    content: |
       install vfvfatat /bin/true
  tags:
   - scored
   - section1.1.1.7
  when: vfat

- name: --- 1.1.1.7 - Ensure mounting of vfat filesystems is disabled (Scored) - Remove module ---
  shell: |
    rmmod vfat
  ignore_errors: true
  tags:
    - scored
    - section1.1.1.7
  when: vfat

- name: 1.1.6 Create Separate Partition for /var (Scored)
  debug: msg="*** Manually create Separate Partition for /var."
  when: partition_var
  tags:
    - scored
    - section1.1
    - section1.1.6


- name: 1.1.7 Bind Mount the /var/tmp directory to /tmp (Scored)
  mount: >
    name="/var/tmp"
    src="/tmp"
    state=mounted
    fstype="none"
    opts="bind"
  when: item.mount == "/tmp"
  with_items: "{{ansible_mounts}}"
  when: partition_var
  tags:
    - scored
    - section1.1
    - section1.1.7


- name: 1.1.11 Create Separate Partition for /var/log (Scored)
  debug: msg="*** Manually create Separate Partition for /var/log."
  when: partition_var
  tags:
    - scored
    - section1.1
    - section1.1.11


- name: 1.1.12 Create Separate Partition for /var/log/audit (Scored)
  debug: msg="*** Manually create Separate Partition for /var/log/audit."
  when: partition_var
  tags:
    - scored
    - section1.1
    - section1.1.12


- name: 1.1.13 Create Separate Partition for /home (Scored)
  debug: msg="*** Manually create Separate Partition for /home."
  when: partition_home
  tags:
    - scored
    - section1.1
    - section1.1.13


- name: 1.1.13-14 Add nodev Option to /home Partition (Scored)
  mount: >
    name="/home"
    src={{ item.device }}
    state=mounted
    fstype={{ item.fstype }}
    opts="nodev"
  when: item.mount == "/home"
  with_items: "{{ansible_mounts}}"
  when: partition_home
  tags:
    - scored
    - section1.1
    - section1.1.13


- name: 1.1.15-16-17 Add noexec Option to /dev/shm Partition (Scored)
  mount: >
    name="/dev/shm"
    src="none"
    state=mounted
    fstype="tmpfs"
    opts="nodev,nosuid,noexec"
  when: partitions_dev
  tags:
    - section1.1
    - section1.1.15
    - section1.1.16
    - section1.1.17
    - scored

- name: 1.1.18-19-20 Add nosuid Option to Removable Media Partitions (Not Scored)
  debug: msg="*** Not relevant."
  when: partitions_media
  tags:
    - notscored
    - section1.1
    - section1.1.18
    - section1.1.19
    - section1.1.20

- name: 1.1.21 Set sticky bit on all world-writeable directories (Scored)
  debug: msg="*** May be too destructive -- see notes"
  when: set_sticky
  tags:
    - scored
    - section1.1
    - section1.1.21


- name: 1.1.21 Set sticky bit on all world-writeable directories (Scored)
  shell: >
     df --local -P | awk '{if (NR!=1) print $6}'
     | xargs -I '{}' find '{}' -xdev -type
     d \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null
  when: set_sticky
  tags:
    - scored
    - section1.1
    - section1.1.21

- name: 1.1.22 Disable Automounting (Scored)
  debug: msg="*** Disable Automounting (Scored) -- see notes"
  when: auto_mount
  tags:
    - scored
    - section1.1
    - section1.1.22

- name: 1.1.22 Disable Automounting (Scored)
  shell: |
     chkconfig autofs off
  when: auto_mount
  when: ansible_distribution == "CentOS"
  when: ansible_distribution == "Final"
  when: ansible_distribution == "6.5"
  tags:
    - scored
    - section1.1
    - section1.1.22

- name: --- 1.1.23 Disable USB Storage (Scored) --
  copy:
    dest: "/etc/modprobe.d/usb-storage.conf"
    content: |
         install usb-storage /bin/true
  when: usb_storage
  tags:
     - scored
     - section1.1.1.1

- name: --- 1.1.23 Disable USB Storage (Scored) --
  shell: |
      rmmod usb-storage
  ignore_errors: yes
  when: usb_storage
  tags:
      - scored
      - section1.1.1.1

# 1.2 Configure Software Updates

- name: 1.2.1 Ensure package manager repositories are configured (Not Scored)
  command: yum repolist
  when: ansible_distribution == "RedHat"
  when: yum_update
  ignore_errors: yes
  tags:
    - notscored
    - section1.2
    - section1.2.1



- name: 1.2.2 Verify Red Hat GPG key is installed (Scored)
  command: gpg --quiet --with-fingerprint /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
  when: ansible_distribution == "RedHat"
  when: VerifyGPG
  ignore_errors: yes
  tags:
    - scored
    - section1.2
    - section1.2.2


- name: 1.2.3 Verify that gpgcheck is Globally Activated (Scored)
  lineinfile: >
    state=present
    dest=/etc/yum.conf
    regexp=^gpgcheck=
    line=gpgcheck=1
  when: verify_gpgcheck
  ignore_errors: yes
  tags:
    - scored
    - section1.2
    - section1.2.3

- name: 1.5.1 Get Absolute Path to grub.conf
  command: readlink -f /etc/grub.conf
  register: readlink
  changed_when: false
  when: ansible_distribution == "CentOS"
  when: ansible_distribution == "Final"
  when: ansible_distribution == "6.5"
  tags:
    - scored
    - section1.5
    - section1.5.1

- name: 1.5.1 Set User/Group Owner on /etc/grub.conf (Scored)
  file: >
    path={{ readlink.stdout }}
    owner=root
    group=root
  when: ansible_distribution == "CentOS"
  when: ansible_distribution == "Final"
  when: ansible_distribution == "6.5"
  tags:
    - scored
    - section1.5
    - section1.5.1

- name: 1.5.2 Get Absolute Path to grub.conf
  command: readlink -f /etc/grub.conf
  register: readlink
  changed_when: false
  when: ansible_distribution == "CentOS"
  when: ansible_distribution == "Final"
  when: ansible_distribution == "6.5"
  tags:
    - scored
    - section1.5
    - section1.5.2

- name: 1.5.2 Set Permissions on /etc/grub.conf (Scored)
  file: >
    path={{ readlink.stdout }}
    mode=0400
  when: ansible_distribution == "CentOS"
  when: ansible_distribution == "Final"
  when: ansible_distribution == "6.5"
  tags:
    - scored
    - section1.5
    - section1.5.2

- name: 1.5.3 Set boot loader password (Scored)
  debug: msg="*** Too destructive for production systems. Evaluate for your environment first."
  tags:
    - scored
    - section1.5
    - section1.5.3

- name: 1.5.4 Require authentication for single-user mode (Scored)
  debug: msg="*** Too destructive for production systems. Evaluate for your environment first."
  tags:
    - scored
    - section1.5
    - section1.5.4

- name: 1.5.5 Disable Interactive Boot (Scored)
  lineinfile: >
    dest=/etc/sysconfig/init
    regexp=^PROMPT=
    line=PROMPT=no
  tags:
    - scored
    - section1.5
    - section1.5.5

- name: 1.6.1 Restrict core dumps (Scored) - via pam
  lineinfile: >
    dest=/etc/security/limits.conf
    line="* hard core 0"
    insertafter=EOF
  tags:
    - scored
    - section1.6
    - section1.6.1

- name: 1.6.1 Restrict core dumps (Scored) - via sysctl
  sysctl: >
    name=fs.suid_dumpable
    value=0
    state=present
    ignoreerrors=yes
  tags:
    - scored
    - section1.6
    - section1.6.1

- name: 1.6.2 Configure ExecShield (Scored)
  sysctl: >
    name=kernel.exec-shield
    value=1
    state=present
    ignoreerrors=yes
  tags:
    - scored
    - section1.6
    - section1.6.2

- name: 1.6.3 Enable Randomized Virtual Memory Region Placement (Scored)
  sysctl: >
    name=kernel.randomize_va_space
    value=2
    state=present
    ignoreerrors=yes
  tags:
    - scored
    - section1.6
    - section1.6.3

- name: 1.7 Use the Latest OS Release (Not Scored)
  command: >
    cat /etc/redhat-release
  when: ansible_distribution == "RedHat"
  tags:
    - notscored
    - section1.7
